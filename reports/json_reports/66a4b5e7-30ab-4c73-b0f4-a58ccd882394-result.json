{"name": "test_tc001_invalid_login[Chrome]", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'text'", "trace": "request = <FixtureRequest for <Function test_tc001_invalid_login[Chrome]>>\n\n    def test_tc001_invalid_login(request):\n        print(\"Test Started\")\n        valid_user_name = excel.read_excel_data(const.EXCEL_PATH, \"Setting\", 0, \"Phone_Email\")\n        invalid_user_name = excel.read_excel_data(const.EXCEL_PATH, \"data\", 0, \"UserName\")\n        invalid_password = excel.read_excel_data(const.EXCEL_PATH, \"data\", 0, \"Password\")\n        expected_user_error = excel.read_excel_data(const.EXCEL_PATH, \"data\", 0, \"UserNameError\")\n        expected_Pass_error = excel.read_excel_data(const.EXCEL_PATH, \"data\", 0, \"PasswordError\")\n        print(invalid_user_name)\n    \n        dash = pm.get_dashboard_page(request.node.driver)\n        dash.click_on_sing_in()\n        login = pm.get_login_page(request.node.driver)\n        login.set_user_name(invalid_user_name)\n    \n>       actual_user_error = login.get_login_error_message()\n\ntest_scripts\\test_login.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <source.pages.login_page.LoginPage object at 0x095B34B0>\n\n    def get_login_error_message(self):\n        ele = self.find_element(*self.__login_error)\n>       return ele.text\nE       AttributeError: 'NoneType' object has no attribute 'text'\n\nsource\\pages\\login_page.py:21: AttributeError"}, "attachments": [{"name": 